
.grayBox {
    background-color: rgba(60, 223, 84, 0.87) ;
    border-radius: 10px ;
    padding: 10px ;
    margin-bottom: 10px ;
    width: 200px;
    box-shadow: 0px 0px 5px rgba(0,0,0,0.2);
    color: black;
}

/* Initial style */
.hoverableRow {
    transition: transform 0.3s ease, box-shadow 0.3s ease; /* Smooth transition for transform and box-shadow */
    cursor: pointer; /* Regular hand cursor for clickable items */
}

/* Hover effect */
.hoverableRow:hover {
    transform: translateY(-3px); /* Lifts the element up by 3 pixels */
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Adds a subtle shadow below to enhance the lifting effect */
    cursor: pointer; /* Changes the cursor to a grabbing hand */
}

/* Initial style for playerName */
.playerName {
    position: relative;
    cursor: pointer; /* Cross-like cursor */
    overflow: hidden; /* Hides our strikethrough when it's animating in/out */
    transition: color 0.3s; /* Smooth transition for color */
}

/* Hover effect for playerName */
.playerName:hover {
    color: rgba(0, 0, 0, 0.5); /* Dim the color slightly on hover */
}

/* Adding a pseudo-element for the strikethrough effect */
.playerName::before {
    content: "";
    position: absolute;
    top: 50%;
    left: 0;
    width: 100%;
    height: 2px;
    background: red; /* Color of the strikethrough line */
    transform: scaleX(0);
    transform-origin: left;
    transition: transform 0.5s; /* Animation duration */
}

/* The animation effect on hover */
.playerName:hover::before {
    transform: scaleX(1);
}

.modalBackdrop {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 9999;
}

.modalContent {
    background-color: white;
    padding: 20px;
    border-radius: 10px;
    width: 80%;
    max-width: 400px;
}

.startMatchButton {
    transition: transform 0.3s ease-in-out;
    /* ... any other styling for the button ... */
}

.startMatchButton:hover {
    animation: pulse 3s infinite; /* Adjusted pulsation rhythm */
    transform: scale(1.1);
}

@keyframes pulse {
    0% {
        transform: scale(1.1) rotate(0deg);
    }
    10% {
        transform: scale(1.1) rotate(-3deg);
    }
    20% {
        transform: scale(1.1) rotate(3deg);
    }
    30% {
        transform: scale(1.1) rotate(-5deg);
    }
    40% {
        transform: scale(1.1) rotate(5deg);
    }
    50% {
        transform: scale(1.1) rotate(-7deg);
    }
    60% {
        transform: scale(1.1) rotate(7deg);
    }
    70% {
        transform: scale(1.1) rotate(-5deg);
    }
    80% {
        transform: scale(1.1) rotate(5deg);
    }
    90% {
        transform: scale(1.1) rotate(-3deg);
    }
    100% {
        transform: scale(1.05) rotate(0deg);
    }
}

.mainContentContainer {
    width: 80%;      /* or any desired width */
    margin: 0 auto;  /* centers the container horizontally */
    padding: 20px 0; /* optional vertical padding for better appearance */
}

.componentStyle {
    margin-bottom: 50px;  /* adds space between stacked components */
}

.dataTableContainer {
    background-color: #5a3a7d; /* dark-ish purple */
    border-radius: 25px; /* very rounded corners */
    padding: 20px; /* space between the box edge and table */
    box-shadow: 0px 4px 15px rgba(0, 0, 0, 0.1); /* Optional: adds a subtle shadow for a "lifted" effect */
    overflow: auto; /* Ensures the table doesn't overflow the box */
}

.userTable {
    width: 100%; /* Makes sure the table takes up the full width of its container */
    background-color: #f5f5f5; /* light-colored background for the table */
    border-collapse: collapse; /* removes space between table cells */
    table-layout: fixed;
}

.userTable th, .userTable td {
    padding: 10px 15px; /* Adds some space inside each table cell */
    border: 1px solid #ddd; /* light border around table cells */
}

/* This will make the table headers pop a bit more */
.userTable th {
    background-color: #e0e0e0;
    text-transform: uppercase; /* Optional: Makes headers uppercase */
}

/* Font styling */
body {
    font-family: 'Nunito', sans-serif; /* Nunito is a slightly rounded, very readable font */
}

body {
  background-color: #333333; /* adjust the color as needed */
  margin: 0;
  padding: 0;
  font-family: -apple-system, BlinkMacSystemFont, Roboto, 'Segoe UI', Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
}

.blog-container {
  background-color: #ffffff;
  max-width: 800px; /* or whatever width you desire for your content */
  margin: 20px auto; /* vertically spaced by 20px and horizontally centered */
  padding: 20px; /* some spacing inside */
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* optional: slight shadow for "lift" */
}

.bottom-bar {
  position: fixed;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 50px; /* Adjust this height as necessary */
  background-color: black;
  z-index: 10; /* Ensure it's above other elements */
}

.matchComponentsBox {
    /* Similarities */
    background-color: #d3acf8; /* A bit different from the dark-ish purple used earlier */
    border-radius: 25px;

    /* Distinctiveness */
    box-shadow: 0px 4px 15px rgba(0, 0, 0, 0.2); /* subtle shadow */
    border: 1px solid rgba(255, 255, 255, 0.1); /* thin border with slight opacity */
    padding: 20px; /* space for its contents */
    color: #eaeaea; /* Light text for contrast */

    /* Additional styles for responsiveness and aesthetics */
    margin: 15px 0; /* Space above and below the box */
    overflow: hidden; /* Ensures content doesn't spill out, especially if there are nested elements with their own styles */
}

.possiblePBox{
    background-color: white;
    color: black;          /* sets the text color to black */
    border-radius: 10px;   /* rounds the corners */
    padding: 15px;         /* gives some space inside the box */
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); 
}

.possiblePBox th, .possiblePBox td {
    text-align: center;
    vertical-align: middle; /* This centers content vertically */
    padding: 8px 12px;      /* Provides some space inside each cell */
}

.possiblePBox thead th {
    background-color: #f2f2f2;  /* Light gray for headers */
    font-weight: bold;          /* Makes the header text bold */
}

.possiblePBox tbody tr:nth-child(odd) {
    background-color: #f9f9f9; /* Light gray for every other row */
}

.possiblePBox table {
    width: 100%;       /* Makes the table take up the full width of its container */
    border-collapse: collapse;  /* Removes the default spacing between table cells */
}
.possiblePBox th, .possiblePBox td {
    border: 1px solid #ddd; /* Light gray border for cells */
}
.possiblePBox table {
    border-radius: 10px;     /* Rounded corners for the table itself */
    overflow: hidden;        /* Ensures that the table's content obeys the border-radius */
}

.modal {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    padding: 20px;
    background-color: white;
    border: 2px solid purple;
    border-radius: 12px;
    z-index: 1000; /* Ensure the modal is above other content */
    width: 80%;
    max-width: 400px;
    display: flex;
    flex-direction: column;
    align-items: center;
}

.playerResult {
    margin: 10px 0;
    display: flex;
    justify-content: space-between;
    width: 100%;
}

.playerResult label {
    display: flex;
    align-items: center;
}

.backdrop {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    background-color: rgba(0, 0, 0, 0.5); /* Gray out the background */
    z-index: 999; /* Ensure the backdrop is below the modal but above other content */
}

.modal {
    /* ... existing styles ... */
    color: black; /* Change text color to black */
}

/* styles.css or equivalent */

/* styles.css or equivalent */

.purchaseButton {
    transition: transform 0.1s ease, background-color 0.2s ease; 
    background-color: #4CAF50;
    cursor: pointer;
}

.purchaseButton:hover {
    background-color: #45a049; /* Slightly darker green on hover */
    transform: scale(1.05); /* Grow button a little on hover */
}

.purchaseButton:active {
    transform: scale(0.95); /* Shrink button a little on click */
}

.purchaseButton.disabled {
    background-color: #D3D3D3;
    cursor: not-allowed;
}

/* styles.css or equivalent */

.rarityField {
    display: flex;
    align-items: center;
    margin-top: 5px;
}

.rarityField span {
    margin-right: 10px;
    width: 120px; /* adjust if needed */
}

.rarityField button {
    margin: 0 5px;
    cursor: pointer;
}

.rarityField input {
    width: 40px;
    text-align: center;
}

/* General Styles */
.rarityField, .boosterSection {
    display: flex;
    align-items: center;
    margin-bottom: 15px;
}

.totalValue, .boosterPurchaseValue {
    font-size: 1.2em;
    margin-top: 15px;
}

/* Button Styles */
.shopButton {
    padding: 10px 20px;
    border: none;
    background-color: #4CAF50; /* Green color */
    color: #ffffff;
    font-size: 1em;
    border-radius: 5px;
    cursor: pointer;
    transition: transform 0.2s, background-color 0.2s; /* Smooth transform and color transition */
}

.shopButton:disabled {
    background-color: #B0BEC5; /* Grayish color */
    cursor: not-allowed;
}

.shopButton:hover:not(:disabled) {
    background-color: #45A049; /* Darken the green a bit on hover */
    transform: scale(1.05); /* Make the button grow */
}

.shopButton:active {
    transform: scale(0.95); /* Shrink the button a bit when active */
}
